package tetriscircuits.assembler;

enum Operator {
    
    ADCA(0b01001001),
    ADCB(0b01011001),
    ADCC(0b01101001),
    ADCD(0b01111001),
    ADDA(0b01001000),
    ADDB(0b01011000),
    ADDC(0b01101000),
    ADDD(0b01111000),
    ANDA(0b01001100),
    ANDB(0b01011100),
    ANDC(0b01101100),
    ANDD(0b01111100),
    ASA(0b11100000, 2),
    ASB(0b11100001, 2),
    ASC(0b11100010, 2),
    ASD(0b11100011, 2),
    ASI(0b11100100, 2),
    ASJ(0b11100101, 2),
    ASM(0b11100110, 2),
    ASN(0b11100111, 2),
    BCC(0b10000010, 3),
    BCS(0b10000011, 3),
    BEQ(0b10000101, 3),
    BMI(0b10000111, 3),
    BNE(0b10000100, 3),
    BPL(0b10000110, 3),
    CLC(0b11110100),
    DECA(0b01000011),
    DECB(0b01010011),
    DECC(0b01100011),
    DECD(0b01110011),
    INCA(0b01000010),
    INCB(0b01010010),
    INCC(0b01100010),
    INCD(0b01110010),
    INVA(0b01000000),
    INVB(0b01010000),
    INVC(0b01100000),
    INVD(0b01110000),
    JAB(0b11110000, 3),
    JCC(0b10001010, 3),
    JCD(0b11110001, 3),
    JCS(0b10001011, 3),
    JEQ(0b10001101, 3),
    JIJ(0b11110010, 3),
    JMI(0b10001111, 3),
    JMN(0b11110011, 3),
    JMP(0b10000000, 3),
    JNE(0b10001100, 3),
    JPL(0b10001110, 3),
    JSR(0b10001000, 3),
    LDA(0b11010000, 2),
    LDB(0b11010001, 2),
    LDC(0b11010010, 2),
    LDD(0b11010011, 2),
    LDI(0b11010100, 2),
    LDJ(0b11010101, 2),
    LDM(0b11010110, 2),
    LDN(0b11010111, 2),
    NEGA(0b01000001),
    NEGB(0b01010001),
    NEGC(0b01100001),
    NEGD(0b01110001),
    ORA(0b01001101),
    ORB(0b01011101),
    ORC(0b01101101),
    ORD(0b01111101),
    PHA(0b11001000, 2),
    PHB(0b11001001, 2),
    PHC(0b11001010, 2),
    PHD(0b11001011, 2),
    PHI(0b11001100, 2),
    PHJ(0b11001101, 2),
    PHM(0b11001110, 2),
    PHN(0b11001111, 2),
    PLA(0b11011000, 2),
    PLB(0b11011001, 2),
    PLC(0b11011010, 2),
    PLD(0b11011011, 2),
    PLI(0b11011100, 2),
    PLJ(0b11011101, 2),
    PLM(0b11011110, 2),
    PLN(0b11011111, 2),
    RTS(0b10010000),
    SAB(0b11101000, 3),
    SBBA(0b01001011),
    SBBB(0b01011011),
    SBBC(0b01101011),
    SBBD(0b01111011),
    SCD(0b11101001, 3),
    SEC(0b11110101),
    SHLA(0b01000110),
    SHLB(0b01010110),
    SHLC(0b01100110),
    SHLD(0b01110110),
    SIJ(0b11101010, 3),
    SMN(0b11101011, 3),
    SSRA(0b01000101),
    SSRB(0b01010101),
    SSRC(0b01100101),
    SSRD(0b01110101),
    STA(0b11000000, 2),
    STB(0b11000001, 2),
    STC(0b11000010, 2),
    STD(0b11000011, 2),
    STI(0b11000100, 2),
    STJ(0b11000101, 2),
    STM(0b11000110, 2),
    STN(0b11000111, 2),
    SUBA(0b01001010),
    SUBB(0b01011010),
    SUBC(0b01101010),
    SUBD(0b01111010),
    TAB(0b00000001),
    TAC(0b00000010),
    TAD(0b00000011),
    TAI(0b00000100),
    TAJ(0b00000101),
    TAM(0b00000110),
    TAN(0b00000111),
    TBA(0b00001000),
    TBC(0b00001010),
    TBD(0b00001011),
    TBI(0b00001100),
    TBJ(0b00001101),
    TBM(0b00001110),
    TBN(0b00001111),
    TCA(0b00010000),
    TCB(0b00010001),
    TCD(0b00010011),
    TCI(0b00010100),
    TCJ(0b00010101),
    TCM(0b00010110),
    TCN(0b00010111),
    TDA(0b00011000),
    TDB(0b00011001),
    TDC(0b00011010),
    TDI(0b00011100),
    TDJ(0b00011101),
    TDM(0b00011110),
    TDN(0b00011111),
    TIA(0b00100000),
    TIB(0b00100001),
    TIC(0b00100010),
    TID(0b00100011),
    TIJ(0b00100101),
    TIM(0b00100110),
    TIN(0b00100111),
    TJA(0b00101000),
    TJB(0b00101001),
    TJC(0b00101010),
    TJD(0b00101011),
    TJI(0b00101100),
    TJM(0b00101110),
    TJN(0b00101111),
    TMA(0b00110000),
    TMB(0b00110001),
    TMC(0b00110010),
    TMD(0b00110011),
    TMI(0b00110100),
    TMJ(0b00110101),
    TMN(0b00110111),
    TNA(0b00111000),
    TNB(0b00111001),
    TNC(0b00111010),
    TND(0b00111011),
    TNI(0b00111100),
    TNJ(0b00111101),
    TNM(0b00111110),
    USRA(0b01000100),
    USRB(0b01010100),
    USRC(0b01100100),
    USRD(0b01110100),
    XORA(0b01001110),
    XORB(0b01011110),
    XORC(0b01101110),
    XORD(0b01111110),
    ZRA(0b00000000),
    ZRB(0b00001001),
    ZRC(0b00010010),
    ZRD(0b00011011),
    ZRI(0b00100100),
    ZRJ(0b00101101),
    ZRM(0b00110110),
    ZRN(0b00111111);
    
    private final int opcode;
    private final int length;
    
    Operator(final int opcode) {
        this(opcode, 1);
    }
    
    Operator(final int opcode, final int length) {
        this.opcode = opcode;
        this.length = length;
    }

    public int getLength() {
        return length;
    }
    
    public int getOpcode() {
        return opcode;
    }
}
