package tetriscircuits.ui;

import java.awt.EventQueue;
import javax.swing.JTextArea;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;

public class CircuitsEditorPanel extends javax.swing.JPanel {

    private LineNumberingTextArea lineNumberingTextArea;
    
    /**
     * Creates new form NewJPanel
     */
    public CircuitsEditorPanel() {
        initComponents();
        lineNumberingTextArea = new LineNumberingTextArea(codeTextArea);
        scrollPane.setRowHeaderView(lineNumberingTextArea);
        codeTextArea.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(final DocumentEvent e) { 
                try {
                    final Document doc = e.getDocument();
                    final int offset = e.getOffset();
                    final int length = e.getLength();
                    final String insertedText = doc.getText(offset, length);
                    if (insertedText.indexOf('\t') >= 0) {
                        EventQueue.invokeLater(() -> {
                            try {
                                doc.remove(offset, length);
                                doc.insertString(offset, insertedText.replace("\t", "    "), null);
                            } catch (final Exception exception) {
                                exception.printStackTrace();    // TODO REMOVE
                            }
                        });
                    }
                } catch (final Exception exception) {
                    exception.printStackTrace(); // TODO REMOVE
                }
                lineNumberingTextArea.updateLineNumbers();
            }

            @Override
            public void removeUpdate(final DocumentEvent e) {
                lineNumberingTextArea.updateLineNumbers();
            }

            @Override
            public void changedUpdate(final DocumentEvent e) {
                lineNumberingTextArea.updateLineNumbers();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        scrollPane = new javax.swing.JScrollPane();
        codeTextArea = new javax.swing.JTextArea();
        playfieldPanel = new tetriscircuits.ui.PlayfieldPanel();

        codeTextArea.setBackground(new java.awt.Color(43, 43, 43));
        codeTextArea.setColumns(20);
        codeTextArea.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        codeTextArea.setForeground(new java.awt.Color(169, 183, 198));
        codeTextArea.setRows(5);
        codeTextArea.setTabSize(4);
        codeTextArea.setText("This is a test. Hello World!!!");
        codeTextArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 8, 2, 2));
        scrollPane.setViewportView(codeTextArea);

        splitPane.setLeftComponent(scrollPane);

        javax.swing.GroupLayout playfieldPanelLayout = new javax.swing.GroupLayout(playfieldPanel);
        playfieldPanel.setLayout(playfieldPanelLayout);
        playfieldPanelLayout.setHorizontalGroup(
            playfieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 855, Short.MAX_VALUE)
        );
        playfieldPanelLayout.setVerticalGroup(
            playfieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 754, Short.MAX_VALUE)
        );

        splitPane.setRightComponent(playfieldPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1010, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea codeTextArea;
    private tetriscircuits.ui.PlayfieldPanel playfieldPanel;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables
}
