package tetriscircuits.ui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;

public class PlayfieldPanel extends javax.swing.JPanel {
    
    private static final Color BACKGROUND = new Color(0x2B2B2B);
    private static final Color GRID = new Color(0x555555);
    private static final Color AXISES = new Color(0xA9B7C6);
    
    private static final Color[] TETRIMINOS = {
        new Color(0xB802FD),
        new Color(0x1801FF),
        new Color(0xFE103C),
        new Color(0xFFDE00),
        new Color(0x66FD00),
        new Color(0xFF7308),
        new Color(0x00E6FE),        
    };

    /**
     * Creates new form PlayfieldPanel
     */
    public PlayfieldPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    protected void paintComponent(final Graphics g) {
        
        final Dimension size = getSize();
        
        g.setColor(BACKGROUND);
        g.fillRect(0, 0, size.width, size.height);
        
        g.setColor(GRID);
        for (int x = 0; x < size.width; x += 16) {
            g.drawLine(x, 0, x, size.height);
        }
        for (int y = 0; y < size.height; y += 16) {
            g.drawLine(0, y, size.width, y);
        }
    }
}