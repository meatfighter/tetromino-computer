Tetris is Turing-complete 

This article presents a method for embedding a programmable, general-purpose, digital computer into Tetris that is able to run Tetris on Tetris in real-time. The computer’s CPU and RAM are simulated through the manipulation of Tetriminos (the falling pieces) on an infinite playfield. I/O consists of external components; it is needed to load programs into the computer, to deliver keyboard and timer events, to display data in RAM, etc. 

The method requires an agent to enter a repeating sequence of moves. The agent does this blindly; it is not able to see the playfield, inhibiting it from altering the sequence in a way that would contribute to the calculations performed by the CPU. 

Preliminaries 

The playfield is the grid of square cells where the game is played. Each cell is in one of two possible states: empty or solid. The location of each cell is specified uniquely by a pair of integer coordinates. The origin is in the row immediately above the floor. Row indices extend only in the positive direction (upward). Column indices extend in both the positive (rightward) and negative (leftward) directions. 

Tetris is typically played in a playfield with 20 (visible) rows and 10 columns, but the dimensions are arbitrary. 

[ empty 20x10 playfield with original, coordinate axes, boundaries (2 walls, floor) ] 

Tetriminos are polyominos made of four solid cells (of any color). They are generally known by single-character names that resemble their shapes. 

[ T J Z O S L I ] 

A rotation system is a description of how Tetriminos rotate in relation to the surrounding cells and the playfield boundaries. Various rotation systems exist and any of them could have been used for the method described in this article. The right-handed Nintendo Rotation System (NRS) was arbitrarily selected. It centers each Tetrimino in a 5x5 matrix and rotates them 90 degrees about that center. Of the 24 possible orientations, it uses only 19. 

[ orientation table ] 

The left-most column in the table above contains the spawn orientations (the initial orientations of pieces when they appear at the top of the playfield). Rotating a piece clockwise involves stepping through a row from left to right, looping back when the row is exhausted. Counterclockwise rotation does the same in the opposite direction. 

Each orientation is assigned a mnemonic invented for this project. The first character of the mnemonic is the piece type. The second (if present) is an abbreviation for “down", “left”, “up”, “right”, “horizontal”, or “vertical”.  

A move is a request to translate or to rotate a Tetrimino. In accordance with the NRS, the request is granted iff all four cells of the transformed Tetrimino are empty and are within the bounds of the playfield.  

Gravity drops Tetriminos at a regular rate. If gravity cannot move the piece downward per the aforementioned rule, the piece locks into place.  Subsequently, rows of exclusively solid cells are removed by shifting down the rows above them, and the next piece spawns.  

Spawning involves a randomizer, the mechanism that determines the sequence of pieces presented to the player. Any randomizer that is guaranteed to eventually produce all seven Tetriminos from any point in the sequence will work with the methodology described in this article.  

The Agent 

The agent plays on an infinite playfield.   

[ empty, infinite playfield ] 

 

 
